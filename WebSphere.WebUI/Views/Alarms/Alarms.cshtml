 
 

<!-- Styles --> 
<link rel="stylesheet" type="text/css" href="/Content/_CSS/jqueryUI Theme/jquery-ui-1.10.4.custom.min.css" /> 
<link rel="stylesheet" type="text/css" href="/Content/_CSS/datetimepicker/jquery.datetimepicker.css" /> 
<link rel="stylesheet" type="text/css" href="/Content/_CSS/Reports/Reports.css" />
<link rel="stylesheet" type='text/css' href='/Content/_CSS/main.css' />
<link rel="stylesheet" type='text/css' href='/Content/_CSS/jqueryUI Theme/ui.jqgrid.css' /> 
<link rel="stylesheet" type='text/css' href='/Content/_CSS/Reports/zerozam.css' />
<!-- END -->
<!-- Scripts   
<script type="text/javascript" src="/Content/_JS/jquery/jquery-1.11.0.min.js"></script>-->  
<script type="text/javascript" src="/Scripts/_JS/jqGrid/grid.locale-ru.js"></script>
<script type="text/javascript" src="/Scripts/_JS/alarms.js"></script>
<script type="text/javascript" src="/Scripts/_JS/datetimepicker/jquery.datetimepicker.js"></script>
<script type="text/javascript" src="/Scripts/_JS/main.js"></script>
<script type="text/javascript" src="/Scripts/_JS/jqGrid/jquery.jqGrid.min.js"></script> 
<script type="text/javascript" src="/Scripts/_JS/AdditionalFunctions.js"></script> 
<div id="journal" class="container " style="width: 100%;">
    
    
    
    <div class="row">
        <div class="col-md-9">
            <h4>Журнал тревог</h4> 
        </div> 
        <div class="col-md-2">
            <h4> 
                <select class="form-control" id="agzu" name="agzu"> 
                    <option value="0">Все</option>
                        <option value="9501">УЗ №1</option>
                        <option value="9631">УЗ №12</option>
                        <option value="9737">Счетчики</option>
                </select>
                </h4>
</div>
        <div class="col-md-1">
            <h4>
                <input type="button" class="btn btn-default" id="obnov" style=" width 100%;" value="Обновить" onclick="getlastalarmsView()" />
            </h4>
        </div>
        <div class="col-md-1">
            <h4>
                <input type="button" class="btn btn-default" style="width 100%;" value="Квитировать все" onclick="kvitirovanie_all()" />
            </h4> 
</div>
    </div>
    <div id='mess_divView' class="row div_events">
        <table style='margin-bottom:0px;' id='lastalarms_table_view'></table>
    </div>
</div>
    

<script type="text/javascript">
    $(function () {

        $('#lastalarms_table_view').jqGrid({
            caption: "",
            datatype: 'local',
            colNames: ['id', 'tag', 'ack', 'active', 'Начало события', 'Время начала', 'Конец события', 'Тревога', 'Время окончания', 'Квитировал','Время квитирования',"Длительность"],
            colModel: [{ name: 'Id', index: 'Id', hidden: true },
                { name: 'Tag', index: 'Tag', hidden: true },
                { name: 'Ack', index: 'Ack', hidden: true },
                { name: 'Active', index: 'Active', hidden: true },
                { name: 'StartReason', index: 'StartReason', width: '150%', sortable: false, classes: 'lambda_zam_col', },
                {
                    name: 'StartTime', index: 'StartTime', width: '40%', sortable: true, classes: 'lambda_zam_col',
                    sorttype: 'datetime', formatter: "date", formatoptions: { srcformat: "Y-m-d H:i:s", newformat: "d.m.Y  H:i:s" }
                },
                { name: 'EndReason', index: 'EndReason', width: '150%', sortable: false, classes: 'lambda_zam_col',  },
                { name: 'Message', index: 'Message', width: '150%', sortable: false, classes: 'lambda_zam_col', hidden: true },
                {name: 'EndTime', index: 'EndTime', width: '40%', align: 'center', sortable: true, sorttype: 'date',
                    formatter: "date", formatoptions: { srcformat: "Y-m-d H:i:s", newformat: "d.m.Y  H:i:s" }, classes: 'lambda_zam_col',
                },{ name: 'AckedBy', index: 'AckedBy', width: '50%', sortable: false, classes: 'lambda_zam_col' },
                
                {name: 'AckTime', index: 'AckTime', width: '40%', align: 'center', sortable: true, sorttype: 'date', classes: 'lambda_zam_col',
                    formatter: "date", formatoptions: { srcformat: "Y-m-d H:i:s", newformat: "d.m.Y  H:i:s" },
                },
                { name: 'Duration', index: 'Duration', width: '40%', sortable: false, classes: 'lambda_zam_col' }

            ],

            viewrecords: true,
            height: '100%',
            width: '900px',
            scroll: true,
            sortname: ' StartTime',
            sortorder: "asc",
            rowattr: function (rd) {
                //Раскрашиваем алармы
                //if (rd.Tag.indexOf("Work") > -1 && rd.Ack == false && rd.Active == true) { return { "class": "well_nekvit_activ" }; }
                //else if (rd.Tag.indexOf("Work") > -1 && rd.Ack == true && rd.Active == true) { return { "class": "well_kvit_activ" }; }

                //else if (rd.Ack == false && rd.Active == true) { return { "class": "zam_nekvit_activ" }; }
                //else if (rd.Ack == true && rd.Active == true) { return { "class": "zam_kvit_activ" }; }
                //else { return { "class": "zam_nekvit_neactiv" }; }

               // if (rd.StartReason.indexOf("предельный") > -1 && rd.Ack == false && rd.Active == true) { return { "class": "alarm_pred" }; }
               // else if (rd.StartReason.indexOf("критический") > -1 && rd.Ack == false && rd.Active == true) { return { "class": "alarm_krit" }; }
               //
               // else if (rd.Ack == true && rd.Active == true) { return { "class": "zam_kvit_activ" }; }
               // else { return { "class": "zam_nekvit_neactiv" }; }
                if ((rd.StartReason == -1 || rd.StartReason == 1) && rd.Ack == 0 && (rd.Active == true || rd.Active == 1)) { return { "class": "alarm_pred" }; }
                else if ((rd.StartReason == -2 || rd.StartReason == 2) && rd.Ack == 0 && (rd.Active == true || rd.Active == 1)) { return { "class": "alarm_krit" }; }
                     
                else if (rd.Ack >0  && (rd.Active == true || rd.Active == 1)) { return { "class": "zam_kvit_activ" }; }
                else { return { "class": "zam_nekvit_neactiv" }; }

            }
        });

        var lastalarmsW = document.getElementById('mess_divView').offsetWidth;
        var lastalarmsH = document.getElementById('mess_divView').offsetHeight;
        $("#lastalarms_table_view").setGridWidth(lastalarmsW - 19);
        $("#lastalarms_table_view").setGridHeight(lastalarmsH - 30);

        //Квитирование по двойному клику
        $("#lastalarms_table_view").jqGrid('setGridParam', {
            ondblClickRow: function (rowid, iRow, iCol, e) {
                var rowData = jQuery(this).getRowData(rowid);
                var id = rowData['Id'];
                var tag = rowData['Tag'];
                var ack = rowData['Ack'];
                var active = rowData['Active'];
                kvitirovanieView(rowid, id, tag, ack, active);
            }
        });

    });
     
    function errkvit() {
      ErrMessage("Не квитировано");
    }
    function getlastalarmsView(AgzuId) {
                if (AgzuId == undefined) { 
                    AgzuId = document.getElementById("agzu").value;
                }
                else if (AgzuId != 0)
                    document.getElementById("agzu").value = AgzuId;
            LoadPageOn(); 
        //читаем алармы 
        $.ajax({ type: "POST", url: "/Alarms/GetCurrentAlarms", data: { id: AgzuId }, async: true, success: page_drawAlarmsView, error: page_nodraw });
    }
    getlastalarmsView(@Html.Raw(ViewBag.id));
    setInterval('getlastalarmsView()',30000);
    
    function page_nodraw(data) {
        ErrMessage("Не удалось обновить события");
        LoadPageOff();
    }
    function page_drawAlarmsView(data) {
        //рисуем алармы
        var scrollPosition;
        scrollPosition = jQuery("#lastalarms_table_view").closest(".ui-jqgrid-bdiv").scrollTop();
        $("#lastalarms_table_view").jqGrid('clearGridData');
        var countmess = data.length;
        //  $("#lastalarms_table_view").setGridParam({ data: data });

        for (var i = data.length - 1; i >= 0 ; i--) { 
            if (data[i].Active == true || data[i].Active == 1)  data[i].Active = true; 
            else data[i].Active = false;
            if (data[i].Active == false ) { data[i].Message = 'Была тревога: ' + data[i].Message; }
            if (data[i].Active == true ) { data[i].EndTime = ''; }
            if (data[i].Ack ==0 ) { data[i].AckTime = '';data[i].AckedBy = ''; }
            $('#lastalarms_table_view').jqGrid('addRowData', data[i].Id,
            {
                Id: data[i].Id,
                StartReason: data[i].StartReason,
                EndReason: data[i].EndReason,
                Message: data[i].Message,
                StartTime: data[i].StartTime,
                EndTime: data[i].EndTime,
                Ack: data[i].Ack,
                AckedBy: data[i].AckedBy,
                AckTime: data[i].AckTime,
                Active: data[i].Active,
                Duration: data[i].Duration
            });

            /*  if (data[i].Ack == false && data[i].Active == true)
                  $('#lastalarms_table_view').jqGrid('setRowData', data[i].Id, false, "zam_nekvit_activ");
              else if (data[i].Ack == true && data[i].Active == true)
                  $('#lastalarms_table_view').jqGrid('setRowData', data[i].Id, false, "zam_kvit_activ");
              else
                  $('#lastalarms_table_view').jqGrid('setRowData', data[i].Id, false, "zam_nekvit_neactiv");
          */}

        // $("#lastalarms_table_view").setGridParam({ rowNum: countmess }).trigger("reloadGrid");

        jQuery("#lastalarms_table_view").closest(".ui-jqgrid-bdiv").scrollTop(scrollPosition);
        LoadPageOff();
    }
    function kvitirovanieView(rowid, id, tag, ack, active) {
        //if (!ack)
        //$.ajax({ type: "POST", url: '@Url.Action("SetAlarmAck", "Alarms")?id=' + id, async: true, success: getlastalarms, error: errkvit });
        

     //  $.ajax({
     //      type: "POST", url: "/api/Alarms/CheckPermission", data: { a: PERMISSION_RIGHT_Kvit }, async: false,
     //      success: function (_data) { data = _data; }
     //  });
     //  var kvit = data;
      //if (kvit) {
          if (active == 'true') {
              //getlastalarms();
              $.ajax({ type: "POST", url: "/Alarms/SetAlarmAck", data: { Tag: tag, Id: id }, async: true, success: getlastalarmsView });
          }
          else {
              $.ajax({ type: "POST", url: "/Alarms/SetAlarmAck", data: { Tag: tag, Id: id }, async: true });
              $('#lastalarms_table_view').delRowData(rowid);
              getlastalarmsView();
          }
      // } else ErrMessage("Нет прав на квитирование");
    }
    function kvitirovanie_all() {
        
        $.ajax({ type: "POST", url: '@Url.Action("SetAlarmAckAll", "Alarms")', async: true, success: getlastalarms, error: getlastalarms });
        //$.ajax({
       //    type: "POST", url: "/api/Alarms/CheckPermission", data: { a: PERMISSION_RIGHT_Kvit }, async: false,
       //    success: function (_data) { data = _data; }
       //});
       //var kvit = data;
       //if (kvit) {
       //    $.ajax({ type: "POST", url: "/api/Alarms/KvitAll", data: {}, async: true, success: getlastalarms });
       //
       //} else ErrMessage("Нет прав на квитирование");

    }

</script>

